int getIndex(vector<int>& nums, int target, bool getFirst){
    int s = 0;
    int e = nums.size()-1;
    int ans = -1;
    while(s<=e) {
        int mid = s + (e-s)/2;
        if(nums[mid] == target){
            ans = mid;           // storing answer then start searching again 
            if(getFirst)  e = mid - 1;     // we have to go left side for first position
            else	s = mid + 1;   //   we have to go right side for last positon                   
	    }
		else if(nums[mid] > target) e = mid - 1;
        else   s= mid + 1;
    }
    return ans;   
}

vector<int> searchRange(vector<int>& nums, int target) {
    vector<int>  v(2 , -1);
    
    int first = getIndex(nums, target, true);
    if(first == -1)  return v;
    int last = getIndex(nums, target, false);
    v[0] = first;
    v[1] = last;
    return v;
}
